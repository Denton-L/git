[remote "origin"]
	url = git@github.com:Denton-L/git.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[remote "upstream"]
	url = https://github.com/gitster/git.git
	fetch = +refs/heads/*:refs/remotes/upstream/*
[remote]
	pushDefault = origin
[branch "master"]
	remote = upstream
	merge = refs/heads/master
[branch "next"]
	remote = upstream
	merge = refs/heads/next
	rebase = true
[branch "patches"]
	remote = origin
	merge = refs/heads/patches
[format]
	thread = true
	from = true
	signOff = true
	coverLetter = auto
	coverFromDescription = subject
	notes = true
	to = Git Mailing List <git@vger.kernel.org>
[notes]
	rewriteRef = refs/notes/commits

[includeIf "onbranch:submitted/branch-specific-format-patch"]
	path = branch-specific-format-patch/config
[includeIf "onbranch:submitted/better-apply-error"]
	path = better-apply-error/config
[includeIf "onbranch:submitted/gitk-use-pretty-reference"]
	path = gitk-use-pretty-reference/config
[branch "submitted/gitk-use-pretty-reference"]
	remote = origin
	merge = refs/heads/submitted/gitk-use-pretty-reference
	description = gitk: match Git's 'reference' pretty format\n\nRecently, the 'reference' pretty format was implemented in Git, which\nhas the same function as the 'Copy commit summary' feature in gitk.\nSince Git now has a canonical way of doing this, update gitk to match\nthis.
[includeIf "onbranch:submitted/format-output-relative-gitdir"]
	path = format-output-relative-gitdir/config
[includeIf "onbranch:submitted/fix-warnings"]
	path = fix-warnings/config
[includeIf "onbranch:submitted/refactor-4"]
	path = refactor-4/config
[includeIf "onbranch:submitted/checkout-worktree"]
	path = checkout-worktree/config
[branch "submitted/refactor-4"]
	remote = origin
	merge = refs/heads/submitted/refactor-4
	description = pkt-line: war on magical `4` literal\n\nThere are many instances of the literal `4` in packet line-related code.\nThis series replaces these instances with either functions that can\ngenerate the number or an appropriately-named constant.\n\nChanges since v1:\n\n* Introduce patch 1-2 so that the string length is used to generate the\n  `4` where appropriate\n\nChanges since v2:\n\n* Replace some a couple of inline functions with macros that ensure they\n  are string constants\n\n* Use strlen() in one more instance over the PACKET_HEADER_SIZE
[includeIf "onbranch:submitted/diff-merge-base"]
	path = diff-merge-base/config
[branch "submitted/diff-merge-base"]
	description = "builtin/diff: learn --merge-base\n\nThe range-notation in `git diff` has been cited as a mistake since diff\ncompares two endpoints, not whole ranges.[0]  In fact, the ranges seem\nto take on the opposite meanings when compared to range notation in\n`git log`.\n\nIn an effort to reduce the use of range notation as much as possible,\nintroduce the `--merge-base` flag, slightly modified from a suggestion\nby Jonathan Nieder.[1] This flag allows us to replace the first commit\ngiven on the command-line with its merge base between the first and\nsecond commits. This allows us to gently deprecate the `...` form\nentirely, although that is left as an exercise to the reader ;)\n\nOne additional bonus is that this flag allows the \"after\" side to be not\njust constrained to a commit (like with `...` notation). It can now be\nthe working tree or the index as well.\n\nThe `--merge-base` name isn't very satisfying. If anyone has any better\nsuggestions, please let me know.\n\nChanges since v1:\n\n* Implement Junio's documentation suggestions\n\n* Update git diff's usage to include this option\n\nChanges since v2:\n\n* Teach diff-index and diff-tree the --merge-base option as well\n\n[0]: https://lore.kernel.org/git/xmqqy2v26hu0.fsf@gitster-ct.c.googlers.com/\n[1]: https://lore.kernel.org/git/20191223215928.GB38316@google.com/"
	remote = origin
	merge = refs/heads/submitted/diff-merge-base
[includeIf "onbranch:submitted/gitk-whitespace"]
	path = gitk-whitespace/config
[branch "submitted/gitk-whitespace"]
	remote = origin
	merge = refs/heads/submitted/gitk-whitespace
	description = gitk: fix mix of tabs and spaces in indentation\n\nThe source code of gitk has some funny indentation. It uses four spaces\nper level indent but uses tabs every other level (eight spaces).\nReindent gitk to just use spaces instead.\n\nThis series should be empty with `--ignore-all-space`.\n\nChanges since v1:\n\n* Instead of using tabs, just use spaces
