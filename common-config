[remote "origin"]
	url = git@github.com:Denton-L/git.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[remote "upstream"]
	url = https://github.com/gitster/git.git
	fetch = +refs/heads/*:refs/remotes/upstream/*
[remote]
	pushDefault = origin
[branch "master"]
	remote = upstream
	merge = refs/heads/master
[branch "next"]
	remote = upstream
	merge = refs/heads/next
	rebase = true
[branch "patches"]
	remote = origin
	merge = refs/heads/patches
[format]
	thread = true
	from = true
	signOff = true
	coverLetter = auto
	coverFromDescription = subject
	notes = true
	to = Git Mailing List <git@vger.kernel.org>
[notes]
	rewriteRef = refs/notes/commits
[push]
	default = matching

[branch "branch-specific-format-patch/v3"]
	description = teach branch-specific options for format-patch\n\nChanges since v2:\n\n* Replaced `format.<branch-name>.coverSubject` and `--cover-subject`\n  with `format.inferCoverSubject` and `--infer-cover-subject` which\n  reads the subject from the branch description\n* Do not let `git branch -d` delete `format.<branch-name>.*` configs\n* More documentation cleanup\n* Taught format-patch to read `format.<branch-name>.outputDirectory` as\n  well\n\nChanges since v1:\n\n* Used format.<branch-name>.* variables instead of branch.<branch-name>.*\n
[branch "refactor-4/v3"]
	description = pkt-line: war on magical `4` literal\n\nThere are many instances of the literal `4` in packet line-related code.\nThis series replaces these instances with either functions that can\ngenerate the number or an appropriately-named constant.\n\nChanges since v1:\n\n* Introduce patch 1-2 so that the string length is used to generate the\n  `4` where appropriate\n\nChanges since v2:\n\n* Replace some a couple of inline functions with macros that ensure they\n  are string constants\n\n* Use strlen() in one more instance over the PACKET_HEADER_SIZE
[branch "diff-merge-base/v4"]
	description = "builtin/diff: learn --merge-base\n\nThe range-notation in `git diff` has been cited as a mistake since diff\ncompares two endpoints, not whole ranges.[0]  In fact, the ranges seem\nto take on the opposite meanings when compared to range notation in\n`git log`.\n\nIn an effort to reduce the use of range notation as much as possible,\nintroduce the `--merge-base` flag, slightly modified from a suggestion\nby Jonathan Nieder.[1] This flag allows us to replace the first commit\ngiven on the command-line with its merge base between the first and\nsecond commits.\n\nOne additional bonus is that this flag allows the \"after\" side to be not\njust constrained to a commit (like with `...` notation). It can now be\nthe working tree or the index as well.\n\nThe `--merge-base` name isn't very satisfying. If anyone has any better\nsuggestions, please let me know.\n\nChanges since v1:\n\n* Implement Junio's documentation suggestions\n\n* Update git diff's usage to include this option\n\nChanges since v2:\n\n* Teach diff-index and diff-tree the --merge-base option as well\n\nChanges since v3:\n\n* Don't use bitfields directly; extract them to an intermediate variable\n\n* Use explicit literals in diff_get_merge_base() for clarity\n\n* Fix xstrdup() leak\n\n* I misunderstood and thought we wanted to deprecate `...` notation;\n  this is not the case so remove all references to \"gentle deprecation\"\n  and don't remove usage text that references it\n\n[0]: https://lore.kernel.org/git/xmqqy2v26hu0.fsf@gitster-ct.c.googlers.com/\n[1]: https://lore.kernel.org/git/20191223215928.GB38316@google.com/"
[branch "checkout-guess-config/v1"]
	description = checkout: learn the checkout.guess config variable\n\nIf a user does not wish to use DWIM behaviour, they must manually\nspecify git checkout --no-guess each time. Teach checkout and switch to\nhonour the checkout.guess config variable instead.
[branch "fix-checkout-p-three-dots/v1"]
	description = checkout/restore: fix `git checkout -p HEAD...` bug\n\nAs reported earlier[0], `git checkout -p HEAD...` results in the following error:\n\n\t$ git checkout -p HEAD...\n\tusage: git diff-index [-m] [--cached] [<common-diff-options>] <tree-ish> [<path>...]\n\tcommon diff options:\n\t  -z            output diff-raw with lines terminated with NUL.\n\t  -p            output patch format.\n\t  -u            synonym for -p.\n\t  --patch-with-raw\n\t\t\toutput both a patch and the diff-raw format.\n\t  --stat        show diffstat instead of patch.\n\t  --numstat     show numeric diffstat instead of patch.\n\t  --patch-with-stat\n\t\t\toutput a patch and prepend its diffstat.\n\t  --name-only   show only names of changed files.\n\t  --name-status show names and status of changed files.\n\t  --full-index  show full object name on index lines.\n\t  --abbrev=<n>  abbreviate object names in diff-tree header and diff-raw.\n\t  -R            swap input file pairs.\n\t  -B            detect complete rewrites.\n\t  -M            detect renames.\n\t  -C            detect copies.\n\t  --find-copies-harder\n\t\t\ttry unchanged files as candidate for copy detection.\n\t  -l<n>         limit rename attempts up to <n> paths.\n\t  -O<file>      reorder diffs according to the <file>.\n\t  -S<string>    find filepair whose only one side contains the string.\n\t  --pickaxe-all\n\t\t\tshow all files diff when -S is used and hit is found.\n\t  -a  --text    treat all files as text.\n\n\tCannot close git diff-index --cached --numstat --summary HEAD... -- () at <redacted>/libexec/git-core/git-add--interactive line 183.\n\nSince it was decided that <tree-ish> should also officially support the\nmerge-base revs, fix `git checkout -p <rev>...` and officially document the\nsupport.\n\n[0]: https://lore.kernel.org/git/20200929061830.GA40759@generichostname/
[branch "fix-checkout-p-three-dots/v2"]
	description = checkout/restore: fix `git checkout -p HEAD...` bug\n\nAs reported earlier[0], `git checkout -p HEAD...` results in the following error:\n\n\t$ git checkout -p HEAD...\n\tusage: git diff-index [-m] [--cached] [<common-diff-options>] <tree-ish> [<path>...]\n\tcommon diff options:\n\t  -z            output diff-raw with lines terminated with NUL.\n\t  -p            output patch format.\n\t  -u            synonym for -p.\n\t  --patch-with-raw\n\t\t\toutput both a patch and the diff-raw format.\n\t  --stat        show diffstat instead of patch.\n\t  --numstat     show numeric diffstat instead of patch.\n\t  --patch-with-stat\n\t\t\toutput a patch and prepend its diffstat.\n\t  --name-only   show only names of changed files.\n\t  --name-status show names and status of changed files.\n\t  --full-index  show full object name on index lines.\n\t  --abbrev=<n>  abbreviate object names in diff-tree header and diff-raw.\n\t  -R            swap input file pairs.\n\t  -B            detect complete rewrites.\n\t  -M            detect renames.\n\t  -C            detect copies.\n\t  --find-copies-harder\n\t\t\ttry unchanged files as candidate for copy detection.\n\t  -l<n>         limit rename attempts up to <n> paths.\n\t  -O<file>      reorder diffs according to the <file>.\n\t  -S<string>    find filepair whose only one side contains the string.\n\t  --pickaxe-all\n\t\t\tshow all files diff when -S is used and hit is found.\n\t  -a  --text    treat all files as text.\n\n\tCannot close git diff-index --cached --numstat --summary HEAD... -- () at <redacted>/libexec/git-core/git-add--interactive line 183.\n\nSince it was decided that <tree-ish> should also officially support the\nmerge-base revs, fix `git checkout -p <rev>...` and officially document the\nsupport.\n\nChanges since v1:\n\n* Add two NEEDSWORK commits\n\n* Be more precise in the inline code comment\n\n[0]: https://lore.kernel.org/git/20200929061830.GA40759@generichostname/
[branch "checkout-guess-config/v2"]
	description = checkout: learn the checkout.guess config variable\n\nIf a user does not wish to use DWIM behaviour, they must manually\nspecify git checkout --no-guess each time. Teach checkout and switch to\nhonour the checkout.guess config variable instead.\n\nChanges since v1:\n\n* Replace enumerated priority list with bullet points
