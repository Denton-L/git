[remote "origin"]
	url = git@github.com:Denton-L/git.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[remote "upstream"]
	url = https://github.com/gitster/git.git
	fetch = +refs/heads/*:refs/remotes/upstream/*
[remote]
	pushDefault = origin
[branch "master"]
	remote = upstream
	merge = refs/heads/master
[branch "jch"]
	remote = upstream
	merge = refs/heads/jch
	rebase = true
[branch "patches"]
	remote = origin
	merge = refs/heads/patches
[format]
	thread = true
	from = true
	signOff = true
	coverLetter = auto
	coverFromDescription = subject
	notes = true
	to = Git Mailing List <git@vger.kernel.org>

[includeIf "onbranch:submitted/branch-specific-format-patch"]
	path = branch-specific-format-patch/config
[includeIf "onbranch:submitted/submodule-set-url"]
	path = submodule-set-url/config
[includeIf "onbranch:submitted/experimental/demonstrate-graph-bug"]
	path = experimental/demonstrate-graph-bug/config
[includeIf "onbranch:submitted/better-apply-error"]
	path = better-apply-error/config
[includeIf "onbranch:submitted/rev-list-prune-synopsis"]
	path = rev-list-prune-synopsis/config
[includeIf "onbranch:submitted/merge-autostash"]
	path = merge-autostash/config
[includeIf "onbranch:submitted/t5520-cleanup"]
	path = t5520-cleanup/config
[includeIf "onbranch:submitted/diff-return-code"]
	path = diff-return-code/config
[includeIf "onbranch:submitted/pretty-summary"]
	path = pretty-summary/config
[branch "submitted/pretty-summary"]
	description = learn the \"summary\" pretty format\n\nOn this mailing list (and many others) the standard way to reference\nother commits with the \"summary\" format, e.g. \"f86a374 (\"pack-bitmap.c:\nfix a memleak\", 2015-03-30)\". Since it's so commonly used, let's\nstandardise it as a pretty format.\n\nChanges since v1:\n\n* Replace more references to \"sha1\" with \"hash\"\n\n* Clean up 8/10 by losing the allocation and making the subject less\n  misleading\n\n* Add tests in 7/10 to ensure 8/10 does not change any behaviour
[branch "submitted/t5520-cleanup"]
	description = t5520: various test cleanup\n\nLike earlier patchsets, I want to implement a feature that involves\nmodifications to the test suite. Since that feature will probably take a\nwhile to polish up, however, let's clean up the test suite in a separate\npatchset first so it's not blocked by the feature work.\n\n1/15 is a general improvement to test_rev_cmp() that will be used later\nin the series.\n\nChanges since v4:\n\n* Cleaned up test_cmp_rev() logic with suggestions from Junio\n\nChanges since v3:\n\n* Rebased and tested on top of v2.24.0\n\nChanges since v2:\n\n* Drop 't7408: replace `test_must_fail test_path_is_file`' since it's\n  not a rabbit hole we want to go into right now\n\n* Fix the output of `test_cmp_rev !` when revs are actually equal\n\n* Rebase against the latest master since this topic hasn't been picked\n  up yet\n\nChanges since v1:\n\n* Incorporate Eric's feedback
	remote = upstream
	merge = refs/heads/dl/t5520-cleanup
[includeIf "onbranch:submitted/complete-rebase-and-archive"]
	path = complete-rebase-and-archive/config
[branch "submitted/complete-rebase-and-archive"]
	remote = upstream
	merge = refs/heads/dl/complete-rebase-and-archive
[includeIf "onbranch:submitted/log-graph-simplify"]
	path = log-graph-simplify/config
[branch "submitted/log-graph-simplify"]
	remote = upstream
	merge = refs/heads/jc/log-graph-simplify
[includeIf "onbranch:submitted/t0000-test-local-more"]
	path = t0000-test-local-more/config
[includeIf "onbranch:submitted/pretty-reference"]
	path = pretty-reference/config
[branch "submitted/pretty-reference"]
	remote = origin
	merge = refs/heads/submitted/pretty-reference
	description = learn the \"reference\" pretty format\n\nOn this mailing list (and many others) the standard way to reference\nother commits with the \"reference\" format, e.g. \"f86a374 (pack-bitmap.c:\nfix a memleak, 2015-03-30)\". Since it's so commonly used, let's\nstandardise it as a pretty format.\n\nPatches 5-7 were cleanup patches that were critical in earlier\niterations of the series but no longer are critical for the rest of the\npatchset. Nonetheless, let's include them since they improve the quality\nof the codebase.\n\nChanges since v3:\n\n* Change one reference from \"summary\" to \"reference\"\n\n* Clarify --pretty=reference documentation\n\n* Add a squashable patch at the end to implement overridable --date\n\nChanges since v2:\n\n* Rename from \"summary\" to \"reference\"\n\n* Implement the feature as a canned userformat\n\n* Implement the %*s (short date) format string element\n\n* Remove the enclosing dqs around the subject\n\nChanges since v1:\n\n* Replace more references to \"sha1\" with \"hash\"\n\n* Clean up 8/10 by losing the allocation and making the subject less\n  misleading\n\n* Add tests in 7/10 to ensure 8/10 does not change any behaviour
[includeIf "onbranch:submitted/pipefail"]
	path = pipefail/config
[branch "submitted/pipefail"]
	remote = origin
	merge = refs/heads/submitted/pipefail
	description = t: general test cleanup + `set -o pipefail`\n\nPatches 1-20 perform some general test cleanup to modernise the style.\nThey should be relatively uncontroversial and can be merged earlier (or\nas a separate series) if desired. The reason these tests were identified\nfor cleanup was because they failed under `set -o pipefail`.\n\nPatches 21-27 should be considered RFC. In an attempt to catch git\ncommands failing in the upstream of a pipe, we enable `set -o pipefail`\non Bash. This may result in some funny-looking shell script constructs\n(e.g. needing to wrap `grep` since it may \"fail\") but overall, I think it\nis an improvement since we catch failure in more cases.\n\nThis change should be backwards compatible with shells that don't\nsupport pipefail since tests that pass under pipefail should be a subset\nof tests that can pass without pipefail.\n\nI've tested these patches on Linux, MacOS and Travis[1], although I skipped\nCVS, SVN, Apache2 tests (and maybe others?). I'd appreciate help testing\nthese patches on that regard.\n\n[1]: https://travis-ci.org/Denton-L/git/builds/612133448
[includeIf "onbranch:submitted/range-diff-no-notes"]
	path = range-diff-no-notes/config
[branch "submitted/range-diff-no-notes"]
	description = range-diff: learn `--notes`\n\nThis patchset teaches range-diff and format-patch to pass `--notes`\noptions down to the `git log` machinery. This should make the behaviour\nmore configurable for users who either don't want notes to be displayed\nor want multiple notes refs to be displayed.\n\nChanges since v1:\n\n* Complete overhaul of approach
	remote = origin
	merge = refs/heads/submitted/range-diff-no-notes
