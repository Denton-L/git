[remote "origin"]
	url = git@github.com:Denton-L/git.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[remote "upstream"]
	url = https://github.com/gitster/git.git
	fetch = +refs/heads/*:refs/remotes/upstream/*
[remote]
	pushDefault = origin
[branch "master"]
	remote = upstream
	merge = refs/heads/master
[branch "jch"]
	remote = upstream
	merge = refs/heads/jch
	rebase = true
[branch "patches"]
	remote = origin
	merge = refs/heads/patches
[format]
	thread = true
	from = true
	signOff = true
	coverLetter = auto
	coverFromDescription = subject
	notes = true
	to = Git Mailing List <git@vger.kernel.org>
[notes]
	rewriteRef = refs/notes/commits

[includeIf "onbranch:submitted/branch-specific-format-patch"]
	path = branch-specific-format-patch/config
[includeIf "onbranch:submitted/better-apply-error"]
	path = better-apply-error/config
[includeIf "onbranch:submitted/merge-autostash"]
	path = merge-autostash/config
[includeIf "onbranch:submitted/pipefail"]
	path = pipefail/config
[branch "submitted/pipefail"]
	remote = upstream
	merge = refs/heads/dl/test-cleanup
	description = t: test cleanup stemming from experimentally enabling pipefail\n\nThese patches perform some general test cleanup to modernise the style.\nThey should be relatively uncontroversial. The reason these tests were\nidentified for cleanup was because they failed under `set -o pipefail`.\n\nI've gotten rid of the RFC part that actually enables `set -o pipefail`\non supported platforms. As Peff pointed out, there are a lot of\nopportunities for racy SIGPIPE failures so that part still needs a lot\nof work to be ironed out.\n\nThose changes shouldn't hold back the first part of the series, however.\nLet's try to get this test cleanup merged in sooner than later so that\nany new test cases done by copy-paste will have their changes\nrepresented.\n\nChanges since v3:\n\n* More commit message update\n\n* Clean up \"apply-one-time-sed.sh: modernize style\" more according to\n  Junio's suggestions\n\n* Clean up the t7700 leftover bits\n\nChanges since v2:\n\n* Update commit messages according to Eric's suggestions\n\n* Add \"apply-one-time-sed.sh: modernize style\"\n\nChanges since v1:\n\n* Removed the `set -o pipefail` changes\n\n* Addressed Junio and Eric's comments on the first part of the series
[includeIf "onbranch:submitted/rebase-use-autobase"]
	path = rebase-use-autobase/config
[branch "submitted/rebase-use-autobase"]
	description = rebase: fix breakage with `format.useAutoBase`\n\nApparently, this use case has been broken for a long time... Since\nbb52995f3e (format-patch: introduce format.useAutoBase configuration,\n2016-04-26). I'm surprised it's only been reported now.\n\nThis patchset fixes the breakage by teaching\n`git format-patch --no-base` and making rebase use it.\n\nThis patch is based on the latest master since it's such an old bug that\nonly got noticed recently, I'm not sure if it's worth fixing in 'maint'.\nThe series does not apply cleanly on top of 'maint' because it relies on\nc1a6f21cd4 (Doc: add more detail for git-format-patch, 2019-08-27) but\nthe conflicts are relatively minor.\n\nChanges since v3:\n\n* Correct error in log messages more precise by saying that rebases fail\n  in general (even if an upstream is set)\n\n* Change ugly use of OPT_CALLBACK into a more elegant form\n\nChanges since v2:\n\n* Remove spurious indentation change\n\n* Rebase onto the latest master\n\nChanges since v1:\n\n* Update some log messages
	remote = origin
	merge = refs/heads/submitted/rebase-use-autobase
[includeIf "onbranch:submitted/range-diff-with-notes"]
	path = range-diff-with-notes/config
[branch "submitted/range-diff-with-notes"]
	remote = upstream
	merge = refs/heads/dl/range-diff-with-notes
	description = cleanup for 'dl/range-diff-with-notes'\n\nThis series performs some small polishing touches for the\n'dl/range-diff-with-notes' topic. Notably, we fix an incorrect test case\nname but we also perform some nit-picky cleanup for the range-diff code.
[includeIf "onbranch:submitted/format-patch-notes-config"]
	path = format-patch-notes-config/config
[branch "submitted/format-patch-notes-config"]
	description = format-patch: improve handling of `format.notes`\n\nIn this email[1], Elijah pointed out that the handling of multiple\n`format.notes` configurations could be buggy. If we had\n`format.notes = <ref1>`, `format.notes = false` and\n`format.notes = <ref2>`, the behaviour is ambiguous. This series uses\nthe way `--notes=<ref1> --no-notes --notes=<ref2>` is handled as a model\nand structures the handling of `format.notes` in a similar manner,\nallowing one `format.notes = false` to override previous configs.\n\nAlso, in the same email, it was pointed out that git_config() should be\ncalled before repo_init_revisions(). In 13cdf78094 (format-patch: teach\nformat.notes config option, 2019-05-16), the order was reversed. This\nseries changes it back such that git_config() is called before\nrepo_init_revisions().\n\nThis series is based on top of 'dl/format-patch-notes-config'.\n\nIt has minor textual conflicts with 'pu'. The merge resolution can be found at\nhttps://github.com/Denton-L/git.git on branch\n'published/published/pu-format-patch-notes-config'.\n\n[1]: https://lore.kernel.org/git/CABPp-BF44+6gvZVNimKf-k7AWbOjw3OK-cJeFunNR96wvZGkcw@mail.gmail.com/
	remote = upstream
	merge = refs/heads/dl/format-patch-notes-config
[includeIf "onbranch:submitted/gitk-use-pretty-reference"]
	path = gitk-use-pretty-reference/config
