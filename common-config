[remote "origin"]
	url = git@github.com:Denton-L/git.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[remote "upstream"]
	url = https://github.com/gitster/git.git
	fetch = +refs/heads/*:refs/remotes/upstream/*
[remote]
	pushDefault = origin
[branch "master"]
	remote = upstream
	merge = refs/heads/master
[branch "next"]
	remote = upstream
	merge = refs/heads/next
	rebase = true
[branch "patches"]
	remote = origin
	merge = refs/heads/patches
[format]
	thread = true
	from = true
	signOff = true
	coverLetter = auto
	coverFromDescription = subject
	notes = true
	to = Git Mailing List <git@vger.kernel.org>
[sendemail]
	aliasFileType = mutt
[notes]
	rewriteRef = refs/notes/commits
[push]
	default = matching
[include]
	path = local-config

[branch "branch-specific-format-patch/v3"]
	description = teach branch-specific options for format-patch\n\nChanges since v2:\n\n* Replaced `format.<branch-name>.coverSubject` and `--cover-subject`\n  with `format.inferCoverSubject` and `--infer-cover-subject` which\n  reads the subject from the branch description\n* Do not let `git branch -d` delete `format.<branch-name>.*` configs\n* More documentation cleanup\n* Taught format-patch to read `format.<branch-name>.outputDirectory` as\n  well\n\nChanges since v1:\n\n* Used format.<branch-name>.* variables instead of branch.<branch-name>.*\n
[branch "refactor-4/v3"]
	description = pkt-line: war on magical `4` literal\n\nThere are many instances of the literal `4` in packet line-related code.\nThis series replaces these instances with either functions that can\ngenerate the number or an appropriately-named constant.\n\nChanges since v1:\n\n* Introduce patch 1-2 so that the string length is used to generate the\n  `4` where appropriate\n\nChanges since v2:\n\n* Replace some a couple of inline functions with macros that ensure they\n  are string constants\n\n* Use strlen() in one more instance over the PACKET_HEADER_SIZE
[branch "diff-merge-base/v4"]
	description = "builtin/diff: learn --merge-base\n\nThe range-notation in `git diff` has been cited as a mistake since diff\ncompares two endpoints, not whole ranges.[0]  In fact, the ranges seem\nto take on the opposite meanings when compared to range notation in\n`git log`.\n\nIn an effort to reduce the use of range notation as much as possible,\nintroduce the `--merge-base` flag, slightly modified from a suggestion\nby Jonathan Nieder.[1] This flag allows us to replace the first commit\ngiven on the command-line with its merge base between the first and\nsecond commits.\n\nOne additional bonus is that this flag allows the \"after\" side to be not\njust constrained to a commit (like with `...` notation). It can now be\nthe working tree or the index as well.\n\nThe `--merge-base` name isn't very satisfying. If anyone has any better\nsuggestions, please let me know.\n\nChanges since v1:\n\n* Implement Junio's documentation suggestions\n\n* Update git diff's usage to include this option\n\nChanges since v2:\n\n* Teach diff-index and diff-tree the --merge-base option as well\n\nChanges since v3:\n\n* Don't use bitfields directly; extract them to an intermediate variable\n\n* Use explicit literals in diff_get_merge_base() for clarity\n\n* Fix xstrdup() leak\n\n* I misunderstood and thought we wanted to deprecate `...` notation;\n  this is not the case so remove all references to \"gentle deprecation\"\n  and don't remove usage text that references it\n\n[0]: https://lore.kernel.org/git/xmqqy2v26hu0.fsf@gitster-ct.c.googlers.com/\n[1]: https://lore.kernel.org/git/20191223215928.GB38316@google.com/"
[branch "resurrect-hash-agnostic/v1"]
	description = contrib/git-resurrect.sh: make it hash-agnostic\n\nSince Git supports hashes other than SHA-1, the hardcoded $_x40 used to\nmatch OIDs is no longer correct. Replace it with a hash-agnostic\nversion.\n\nWhile we're at it fix some indent issues.\n\nThere are some other style issues in the script but I'll leave those as\nout-of-scope.
