[remote "origin"]
	url = git@github.com:Denton-L/git.git
	fetch = +refs/heads/*:refs/remotes/origin/*
[remote "upstream"]
	url = https://github.com/gitster/git.git
	fetch = +refs/heads/*:refs/remotes/upstream/*
[remote]
	pushDefault = origin
[branch "master"]
	remote = upstream
	merge = refs/heads/master
[branch "next"]
	remote = upstream
	merge = refs/heads/next
	rebase = true
[branch "patches"]
	remote = origin
	merge = refs/heads/patches
[format]
	thread = true
	from = true
	signOff = true
	coverLetter = auto
	coverFromDescription = subject
	notes = true
	to = Git Mailing List <git@vger.kernel.org>
[sendemail]
	aliasFileType = mutt
[notes]
	rewriteRef = refs/notes/commits
[push]
	default = matching
[checkout]
	guess = false
[include]
	path = local-config

[branch "branch-specific-format-patch/v3"]
	description = teach branch-specific options for format-patch\n\nChanges since v2:\n\n* Replaced `format.<branch-name>.coverSubject` and `--cover-subject`\n  with `format.inferCoverSubject` and `--infer-cover-subject` which\n  reads the subject from the branch description\n* Do not let `git branch -d` delete `format.<branch-name>.*` configs\n* More documentation cleanup\n* Taught format-patch to read `format.<branch-name>.outputDirectory` as\n  well\n\nChanges since v1:\n\n* Used format.<branch-name>.* variables instead of branch.<branch-name>.*\n
[branch "refactor-4/v3"]
	description = pkt-line: war on magical `4` literal\n\nThere are many instances of the literal `4` in packet line-related code.\nThis series replaces these instances with either functions that can\ngenerate the number or an appropriately-named constant.\n\nChanges since v1:\n\n* Introduce patch 1-2 so that the string length is used to generate the\n  `4` where appropriate\n\nChanges since v2:\n\n* Replace some a couple of inline functions with macros that ensure they\n  are string constants\n\n* Use strlen() in one more instance over the PACKET_HEADER_SIZE
[branch "reverse-lookup-side-reflog/v2"]
	description = refs: allow @{n} to work with n-sized reflog\n\nWhen there is only one reflog entry (perhaps caused by expiring the\nreflog and then making a single commit) @{1} errors out even though\nthere is technically enough information to do the lookup. Look at the\nold side of the reflog instead of the new side so that this does not\nfail. This is explained in more detail in the commit of the last patch.\n\nThis idea was given by Junio at [0].\n\n[0]: https://lore.kernel.org/git/xmqqzh8zgcfp.fsf@gitster.c.googlers.com/\n\nChanges since v1:\n\n* Factor out set_read_ref_cutoffs()\n\n* Check the output of rev-parse to ensure that the intended commit is\n  returned
[branch "reverse-lookup-side-reflog/v3"]
	description = refs: allow @{n} to work with n-sized reflog\n\nWhen there is only one reflog entry (perhaps caused by expiring the\nreflog and then making a single commit) @{1} errors out even though\nthere is technically enough information to do the lookup. Look at the\nold side of the reflog instead of the new side so that this does not\nfail. This is explained in more detail in the commit of the last patch.\n\nThis idea was given by Junio at [0].\n\n[0]: https://lore.kernel.org/git/xmqqzh8zgcfp.fsf@gitster.c.googlers.com/\n\nChanges since v1:\n\n* Factor out set_read_ref_cutoffs()\n\n* Check the output of rev-parse to ensure that the intended commit is\n  returned\n\nChanges since v2:\n\n* Rename at_indexed_ent -> reached_count\n\n* Add an in-code comment to document that cb->cnt can't be 0 in the first\n  iteration of read_ref_at_ent()\n\n* Make test cases use test_cmp_rev() for brevity and better errors
[includeIf "onbranch:refactor-4/"]
	path = refactor-4/config
[includeIf "onbranch:sort-makefile/"]
	path = sort-makefile/config
[includeIf "onbranch:gitk-whitespace/"]
	path = gitk-whitespace/config
[includeIf "onbranch:format-output-relative-gitdir/"]
	path = format-output-relative-gitdir/config
[includeIf "onbranch:reverse-lookup-side-reflog/"]
	path = reverse-lookup-side-reflog/config
[includeIf "onbranch:better-apply-error/"]
	path = better-apply-error/config
[includeIf "onbranch:branch-specific-format-patch/"]
	path = branch-specific-format-patch/config
[includeIf "onbranch:externcheck/"]
	path = externcheck/config
[includeIf "onbranch:fix-warnings/"]
	path = fix-warnings/config
